// More information, including original source can be found at the following
// Link: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html

/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_genrand(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/

use std::io::Cursor;

use byteorder::{BigEndian, ReadBytesExt};
use rand_core::{RngCore, SeedableRng};

pub const DEFAULT_SEED: u32 = 5489;
pub const DEFAULT_SEED_PS2: u32 = 4537;

const N: usize = 624;
const M: usize = 397;

const MATRIX_A: u32 = 0x9908b0df;
const UPPER_MASK: u32 = 0x80000000;
const LOWER_MASK: u32 = 0x7fffffff;

#[inline]
const fn temper(y: u32) -> u32 {
    let mut y = y;
    y ^= y >> 11;
    y ^= (y << 7) & 0x9d2c5680;
    y ^= (y << 15) & 0xefc60000;
    y ^= y >> 18;

    y
}

#[inline]
fn twist(state: &mut [u32; 624]) {
    for i in 0..N {
        let x = (state[i] & UPPER_MASK) + (state[(i + 1) % N] & LOWER_MASK);
        let mut x_a = x >> 1;

        if x % 2 != 0 {
            x_a ^= MATRIX_A;
        }

        state[i] = state[(i + M) % N] ^ x_a;
    }
}

const LOOKAHEAD_SIZE: usize = 10;
const MAX_LOOKAHEAD_SIZE: usize = N * LOOKAHEAD_SIZE;
const MAX_SYNC_STATES: usize = 100;

pub struct MTState {
    pub mti: usize,
    pub mt: u32,
    pub value: u32,
}

impl MTState {
    pub const fn new(mti: usize, mt: u32, value: u32) -> Self {
        MTState { mti, mt, value }
    }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub struct MT19937 {
    states: [[u32; N]; LOOKAHEAD_SIZE],
    index: usize,
}

impl MT19937 {
    pub fn new() -> Self {
        MT19937::new_with_seed(DEFAULT_SEED)
    }

    pub fn new_with_seed(seed: u32) -> Self {
        let mut mt = MT19937 {
            states: [[0; N]; LOOKAHEAD_SIZE],
            index: 0,
        };
        mt.sgenrand(seed);
        mt.init_states();
        mt
    }

    pub fn sgenrand(&mut self, seed: u32) {
        let state = &mut self.states[0];
        state[0] = seed;

        self.index = 1;
        while self.index < N {
            state[self.index] = 1812433253_u32
                .wrapping_mul(state[self.index - 1] ^ (state[self.index - 1] >> 30))
                + self.index as u32;
            state[self.index] &= 0xffffffff;

            self.index += 1;
        }
    }

    pub fn genrand(&mut self) -> u32 {
        if self.index >= N {
            self.init_states();
        }

        let y = self.states[0][self.index];
        self.index += 1;

        temper(y)
    }

    pub fn load_state(&mut self, state: &[u32; 624], index: usize) {
        self.states[0] = *state;
        self.build_lookahead_states();
        self.index = index;
    }

    fn build_lookahead_states(&mut self) {
        for i in 1..LOOKAHEAD_SIZE {
            let previous_state = &self.states[i - 1];
            self.states[i] = *previous_state;
            let state = &mut self.states[i];
            twist(state);
        }
    }

    fn init_states(&mut self) {
        twist(&mut self.states[0]);
        self.build_lookahead_states();

        self.index = 0;
    }

    const fn get_max_lookahead_index(&self) -> usize {
        MAX_LOOKAHEAD_SIZE - self.index - 1
    }

    pub const fn peek_specific(&self, state_index: usize, index: usize) -> Option<u32> {
        match self.peek_specific_state(state_index, index) {
            Some(state) => Some(state.value),
            None => None,
        }
    }

    pub const fn peek(&self, offset: usize) -> Option<u32> {
        match self.peek_state(offset) {
            Some(state) => Some(state.value),
            None => None,
        }
    }

    pub const fn peek_specific_state(&self, state_index: usize, index: usize) -> Option<MTState> {
        if state_index > self.get_max_lookahead_index() {
            return None;
        }

        if index >= N {
            return None;
        }

        let mt = self.states[state_index][index];
        let value = temper(mt);

        Some(MTState::new(index, mt, value))
    }

    pub const fn peek_state(&self, offset: usize) -> Option<MTState> {
        let offset_index = self.index + offset;
        let state_index = offset_index / N;
        let index = offset_index % N;

        self.peek_specific_state(state_index, index)
    }

    pub fn sync(&mut self, state: &[u32; 624], index: usize) -> Option<usize> {
        if index >= N {
            return None;
        }

        for i in 0..self.states.len() {
            if self.states[i] == *state {
                let diff = (N * i) + index - self.index;
                self.load_state(state, index);

                return Some(diff);
            }
        }

        // get last state and twist up to MAX_SYNC_STATES to check if it exists in one of the near future states
        // limit this in someway to avoid infinite loops for states that simply don't exist
        let mut check_state = self.states[self.states.len() - 1];
        twist(&mut check_state);
        for i in 0..MAX_SYNC_STATES {
            if check_state == *state {
                let diff = (N * (i + self.states.len())) + index - self.index;
                self.load_state(state, index);

                return Some(diff);
            }

            twist(&mut check_state);
        }

        None
    }
}

impl Default for MT19937 {
    fn default() -> Self {
        Self::new()
    }
}

impl SeedableRng for MT19937 {
    type Seed = [u8; 4];

    fn from_seed(seed: Self::Seed) -> Self {
        let mut rdr = Cursor::new(seed);
        MT19937::new_with_seed(rdr.read_u32::<BigEndian>().unwrap())
    }
}

impl RngCore for MT19937 {
    fn next_u32(&mut self) -> u32 {
        self.genrand()
    }

    fn next_u64(&mut self) -> u64 {
        rand_core::impls::next_u64_via_u32(self)
    }

    fn fill_bytes(&mut self, dest: &mut [u8]) {
        rand_core::impls::fill_bytes_via_next(self, dest)
    }

    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), rand_core::Error> {
        self.fill_bytes(dest);
        Ok(())
    }
}

#[cfg(test)]
mod tests {
    use crate::MT19937::{MAX_LOOKAHEAD_SIZE, N};

    #[test]
    fn test_default() {
        let mut mt = super::MT19937::default();

        assert_eq!(mt.genrand(), 3499211612);
        assert_eq!(mt.genrand(), 581869302);
        assert_eq!(mt.genrand(), 3890346734);
        assert_eq!(mt.genrand(), 3586334585);
        assert_eq!(mt.genrand(), 545404204);
    }

    #[test]
    fn test_default_seed() {
        let mut mt = super::MT19937::new_with_seed(super::DEFAULT_SEED);

        assert_eq!(mt.genrand(), 3499211612);
        assert_eq!(mt.genrand(), 581869302);
        assert_eq!(mt.genrand(), 3890346734);
        assert_eq!(mt.genrand(), 3586334585);
        assert_eq!(mt.genrand(), 545404204);
    }

    #[test]
    fn test_default_seed_ps2() {
        let mut mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        assert_eq!(mt.genrand(), 1288459236);
        assert_eq!(mt.genrand(), 2139177191);
        assert_eq!(mt.genrand(), 74803024);
        assert_eq!(mt.genrand(), 3048110697);
        assert_eq!(mt.genrand(), 1213569425);
    }

    #[test]
    fn test_default_peek() {
        let mt = super::MT19937::default();

        assert_eq!(mt.peek(0), Some(3499211612));
        assert_eq!(mt.peek(1), Some(581869302));
        assert_eq!(mt.peek(2), Some(3890346734));
        assert_eq!(mt.peek(3), Some(3586334585));
        assert_eq!(mt.peek(4), Some(545404204));
    }

    #[test]
    fn test_ps2_peek_next_state() {
        let mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        assert_eq!(mt.peek(624), Some(2370195708));
        assert_eq!(mt.peek(624 + 1), Some(1272340656));
        assert_eq!(mt.peek(624 + 2), Some(2451137865));
        assert_eq!(mt.peek(624 + 3), Some(1725072322));
        assert_eq!(mt.peek(624 + 4), Some(781178099));
    }

    #[test]
    fn test_ps2_peek_specific_state() {
        let mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        assert_eq!(mt.peek_specific(0, 0), Some(1288459236));
        assert_eq!(mt.peek_specific(0, 1), Some(2139177191));
        assert_eq!(mt.peek_specific(0, 2), Some(74803024));
        assert_eq!(mt.peek_specific(0, 3), Some(3048110697));
        assert_eq!(mt.peek_specific(0, 4), Some(1213569425));

        assert_eq!(mt.peek_specific(1, 0), Some(2370195708));
        assert_eq!(mt.peek_specific(1, 1), Some(1272340656));
        assert_eq!(mt.peek_specific(1, 2), Some(2451137865));
        assert_eq!(mt.peek_specific(1, 3), Some(1725072322));
        assert_eq!(mt.peek_specific(1, 4), Some(781178099));

        assert_eq!(mt.peek_specific(2, 0), Some(3776761649));
        assert_eq!(mt.peek_specific(2, 1), Some(4155410904));
        assert_eq!(mt.peek_specific(2, 2), Some(1258679099));
        assert_eq!(mt.peek_specific(2, 3), Some(2085559062));
        assert_eq!(mt.peek_specific(2, 4), Some(2548599404));
    }

    #[test]
    fn test_non_existent_peek() {
        let mt = super::MT19937::default();

        assert_eq!(mt.peek_specific(MAX_LOOKAHEAD_SIZE + 1, N + 1), None);
        assert_eq!(mt.peek_specific(MAX_LOOKAHEAD_SIZE + 1, N), None);
        assert_eq!(mt.peek_specific(MAX_LOOKAHEAD_SIZE + 1, N - 1), None);
        assert_eq!(mt.peek_specific(MAX_LOOKAHEAD_SIZE, N), None);
        assert_eq!(mt.peek_specific(MAX_LOOKAHEAD_SIZE - 1, N), None);
        assert_eq!(mt.peek(N * MAX_LOOKAHEAD_SIZE), None);
    }

    #[test]
    fn test_sync_ps2_state_0() {
        let mut mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        let state_0: [u32; N] = [
            4189156473, 1426439472, 3194285136, 520468404, 2493603247, 3868790950, 2846717148,
            1769016590, 3069531523, 1601903121, 2679673199, 308762610, 3610989153, 668549315,
            2875275477, 3554929518, 2116856342, 3094353789, 1533570463, 2307103393, 3137020358,
            1093109447, 1319313294, 3221909902, 1841007213, 355775865, 1831345789, 2344056674,
            3747459305, 425235889, 216760168, 417675053, 4159525722, 2890651506, 4102949347,
            980033502, 1630977826, 2405465170, 1336384335, 1928226122, 3627721441, 1954913977,
            3752095445, 1461161284, 1477241549, 2462686606, 783019896, 396566149, 246721322,
            2159041900, 772051286, 32765137, 2874107215, 609704642, 3150579833, 1758312302,
            824752494, 187741181, 478106359, 511489337, 1482036817, 3784675578, 3573629204,
            1906870243, 1391905771, 1344661263, 3077621131, 4255673855, 3455444488, 2782906662,
            4181444811, 1483997192, 225303852, 3600847779, 909218149, 1062869771, 4079408325,
            1683555608, 187898756, 2631124581, 2562477255, 515808265, 1825675779, 3476118804,
            4003171638, 2802749909, 1809643061, 1537853708, 1139702473, 1926706204, 2227490937,
            1995204357, 595138272, 2695015443, 2722145071, 4167021713, 2856917691, 4234420109,
            1264355015, 2682381472, 2716508041, 163692746, 1352696481, 584595949, 3009274501,
            4076248146, 415071426, 1398001924, 3659237027, 2534515752, 640658490, 490252967,
            3883243408, 3383242283, 39659908, 1734526266, 2652874586, 312216519, 3365387675,
            4000119856, 3395312963, 3906695982, 3320253749, 334238453, 1955434736, 2034255990,
            1342260797, 2096133672, 3104892430, 2874461899, 599951059, 117485464, 2357743556,
            1818910150, 3758026477, 1509500150, 3112506127, 118023327, 2514009051, 1512643419,
            1754441553, 1531446416, 2078110998, 948224398, 3186827599, 2578501171, 1664637370,
            3298844556, 4016176293, 3545837184, 1394751998, 3896177518, 2817450709, 3515949394,
            1834684029, 2217331095, 2705630849, 3093209246, 292882811, 1869446738, 1851418166,
            3373150817, 669705261, 2731545642, 984588031, 2584222172, 1840823734, 1229730098,
            3656266476, 3480585622, 461561463, 1280262329, 224572319, 3165007533, 1887487773,
            3893194464, 4195161016, 1897035699, 1741825023, 174478457, 2616436416, 823330607,
            2980825293, 2832049670, 3054196060, 49321301, 3194076896, 1851699401, 2438535601,
            258980175, 20651469, 2438585568, 2298501076, 116801501, 4157873158, 1814787911,
            2717638997, 3270843686, 1097736951, 1705916638, 471800784, 2602840909, 933179420,
            3315432543, 2470405475, 1655792632, 455543723, 658945150, 1706552864, 2869942684,
            2915075955, 1187834130, 3719571662, 1616947854, 742327261, 790396837, 1883608285,
            2030116029, 495058768, 1197525194, 1697365206, 174818096, 3211549743, 4089444465,
            1788249919, 2513857200, 1861597512, 1619422128, 1618289635, 1732416368, 1924756968,
            1604507047, 4045688924, 2380995019, 280402392, 96462538, 3882031722, 4112019455,
            936645640, 180881551, 919282499, 2808215852, 453600480, 3028063605, 2205417764,
            2828890277, 98763434, 271762891, 2942260387, 568418897, 2309442120, 830250860,
            4227091672, 1994617672, 1403071934, 1523823447, 1839103906, 3013903877, 3382204626,
            1411977041, 841057163, 280436388, 4212502497, 3937464939, 2321378103, 436020662,
            2435761608, 2617840179, 2252832931, 2860366094, 1064834424, 3710036724, 3763663568,
            4193309457, 2011834090, 3265789271, 3394741216, 1218409082, 632882507, 72438928,
            2511736721, 3912306263, 2741280681, 3136395017, 2022168259, 3727789108, 1996033674,
            3946855279, 690751957, 1776496952, 2648544567, 2053315074, 334060226, 3869100932,
            1104498270, 3996547394, 3835824632, 2245437275, 287859317, 1860627118, 2476365147,
            2001424561, 3383680372, 4216371581, 3201433170, 3206348623, 483759815, 801425285,
            3569626608, 3246171543, 339726086, 959551011, 2477275092, 2253194661, 2252289456,
            3034616812, 2203735910, 2220236225, 3857610221, 3136787002, 2756531295, 3337195309,
            2503674130, 2113581562, 2157108637, 3455898557, 3521562538, 3526633842, 141199764,
            953174145, 794204693, 3113454587, 463714892, 1365526181, 3852290961, 3754807161,
            1779909624, 1032309934, 2635683189, 1569049906, 817119586, 1733832634, 644691459,
            3105673331, 299479627, 4113931634, 3533344381, 85288128, 4249502083, 2902198206,
            2079642913, 3691130921, 3931009447, 3025152428, 2582095659, 3587901421, 2229243967,
            4165889794, 1280065737, 2485881709, 2819658725, 166074890, 1082229622, 3879734420,
            3907302968, 2736728532, 476248491, 275260828, 1262227932, 361818124, 1274541469,
            1227449110, 1292668945, 2971534268, 4152611207, 1177747135, 811987535, 936936844,
            2396281505, 1766347708, 3508533613, 1251280615, 2771672483, 2084474117, 4220164459,
            1243577214, 2692411096, 2645994609, 2078356484, 765478408, 1693161474, 3224589988,
            984521179, 913627860, 3605183874, 1176274544, 3083419669, 3727961451, 1910742224,
            3764937154, 815328864, 2742374456, 4262607870, 3233198104, 51448497, 2156208524,
            2524802561, 2089638115, 2244850120, 3891805831, 3592998, 2651897909, 793345467,
            602867544, 1105210092, 2080272600, 2914664974, 69433834, 1561376240, 255826980,
            753580493, 61239267, 3344750381, 4043704973, 1907427573, 1183492198, 2313630628,
            834817599, 3656464674, 1715260449, 1171252584, 1649748683, 3787434732, 2825113302,
            3906838921, 2373615942, 64826516, 3130923741, 3451653452, 1686224226, 3257354346,
            2094889058, 3520155561, 1558457280, 333396768, 2427331597, 835683211, 4011471678,
            377792118, 3780241611, 2094344827, 4061525885, 3853014417, 2525480098, 2149650696,
            1913248100, 2973806189, 2228341681, 3237942459, 1742529028, 3344131004, 1161686701,
            3416810430, 1523769252, 1884853949, 2749657435, 1616606130, 4060681172, 3304032838,
            3337176555, 3169277751, 2873292754, 3657634999, 2590462156, 1405580787, 3348323528,
            1007696009, 3361911748, 3707159843, 3404322584, 733016704, 155511680, 2427252036,
            2720890616, 3641242812, 149514288, 555644419, 3509599537, 3773668371, 4029293596,
            1918886514, 193983022, 1159718298, 2662308763, 885522522, 4125467272, 3927180083,
            1501332445, 2781762196, 2119262595, 2196017759, 3824472390, 3330833498, 2692150616,
            524128214, 1567862389, 773773238, 1914559581, 1345977589, 3329624130, 2950885216,
            1786406318, 1009363575, 1049198456, 280333136, 1281149714, 113615595, 1556110439,
            352887486, 2758126079, 1043152840, 4239622199, 458631077, 2563995515, 3705333336,
            1585830564, 2194628966, 2210854208, 3837099713, 307958730, 3592368764, 1393676849,
            775830694, 3308359528, 1742987222, 2976536214, 3671240554, 2018573695, 2015195451,
            2745381458, 3981325985, 2055214805, 209317954, 3214717635, 2159194397, 4250114608,
            1689222200, 315462517, 525719460, 1344882389, 1697444804, 3643148146, 1794714429,
            4101481018, 3432959722, 2028456167, 993684393, 1964591953, 1304774004, 934485220,
            1631135926, 433074091, 1199305684, 4251436001, 2071810046, 3377101925, 2513252413,
            2802465123, 14775152, 2838953309, 3952488227, 1265215320, 1987662128, 980309503,
            2777413071, 2487316502, 3707670153, 2820123615, 2235107421, 3404802881, 3105984831,
            2689521929, 3767254189, 1611485083, 1551175798, 2097951317, 2149708297, 2898590335,
            3211378237, 677081442, 3913152298, 3313219366, 2654301541, 3525920319, 2042973586,
            3863736417, 2800670215, 1023323561, 1333396852, 1013707050, 3598002301, 561949127,
            1551957284, 956535322, 4293706497, 1962194398, 3879385132, 1330076351, 45462392,
            4032785188, 3760062126, 43428281, 3488592114, 941786787, 2263068395, 1791313394,
            3803697264, 2405823416, 325252562, 2951401873, 1258411673, 1695275031, 2690612321,
            1377389302,
        ];

        let sync_diff = mt.sync(&state_0, 5);
        assert!(sync_diff.is_some());
        assert_eq!(sync_diff.unwrap(), 5);
    }

    #[test]
    fn test_sync_ps2_state_0_index_0() {
        let mut mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        let state_0: [u32; N] = [
            4189156473, 1426439472, 3194285136, 520468404, 2493603247, 3868790950, 2846717148,
            1769016590, 3069531523, 1601903121, 2679673199, 308762610, 3610989153, 668549315,
            2875275477, 3554929518, 2116856342, 3094353789, 1533570463, 2307103393, 3137020358,
            1093109447, 1319313294, 3221909902, 1841007213, 355775865, 1831345789, 2344056674,
            3747459305, 425235889, 216760168, 417675053, 4159525722, 2890651506, 4102949347,
            980033502, 1630977826, 2405465170, 1336384335, 1928226122, 3627721441, 1954913977,
            3752095445, 1461161284, 1477241549, 2462686606, 783019896, 396566149, 246721322,
            2159041900, 772051286, 32765137, 2874107215, 609704642, 3150579833, 1758312302,
            824752494, 187741181, 478106359, 511489337, 1482036817, 3784675578, 3573629204,
            1906870243, 1391905771, 1344661263, 3077621131, 4255673855, 3455444488, 2782906662,
            4181444811, 1483997192, 225303852, 3600847779, 909218149, 1062869771, 4079408325,
            1683555608, 187898756, 2631124581, 2562477255, 515808265, 1825675779, 3476118804,
            4003171638, 2802749909, 1809643061, 1537853708, 1139702473, 1926706204, 2227490937,
            1995204357, 595138272, 2695015443, 2722145071, 4167021713, 2856917691, 4234420109,
            1264355015, 2682381472, 2716508041, 163692746, 1352696481, 584595949, 3009274501,
            4076248146, 415071426, 1398001924, 3659237027, 2534515752, 640658490, 490252967,
            3883243408, 3383242283, 39659908, 1734526266, 2652874586, 312216519, 3365387675,
            4000119856, 3395312963, 3906695982, 3320253749, 334238453, 1955434736, 2034255990,
            1342260797, 2096133672, 3104892430, 2874461899, 599951059, 117485464, 2357743556,
            1818910150, 3758026477, 1509500150, 3112506127, 118023327, 2514009051, 1512643419,
            1754441553, 1531446416, 2078110998, 948224398, 3186827599, 2578501171, 1664637370,
            3298844556, 4016176293, 3545837184, 1394751998, 3896177518, 2817450709, 3515949394,
            1834684029, 2217331095, 2705630849, 3093209246, 292882811, 1869446738, 1851418166,
            3373150817, 669705261, 2731545642, 984588031, 2584222172, 1840823734, 1229730098,
            3656266476, 3480585622, 461561463, 1280262329, 224572319, 3165007533, 1887487773,
            3893194464, 4195161016, 1897035699, 1741825023, 174478457, 2616436416, 823330607,
            2980825293, 2832049670, 3054196060, 49321301, 3194076896, 1851699401, 2438535601,
            258980175, 20651469, 2438585568, 2298501076, 116801501, 4157873158, 1814787911,
            2717638997, 3270843686, 1097736951, 1705916638, 471800784, 2602840909, 933179420,
            3315432543, 2470405475, 1655792632, 455543723, 658945150, 1706552864, 2869942684,
            2915075955, 1187834130, 3719571662, 1616947854, 742327261, 790396837, 1883608285,
            2030116029, 495058768, 1197525194, 1697365206, 174818096, 3211549743, 4089444465,
            1788249919, 2513857200, 1861597512, 1619422128, 1618289635, 1732416368, 1924756968,
            1604507047, 4045688924, 2380995019, 280402392, 96462538, 3882031722, 4112019455,
            936645640, 180881551, 919282499, 2808215852, 453600480, 3028063605, 2205417764,
            2828890277, 98763434, 271762891, 2942260387, 568418897, 2309442120, 830250860,
            4227091672, 1994617672, 1403071934, 1523823447, 1839103906, 3013903877, 3382204626,
            1411977041, 841057163, 280436388, 4212502497, 3937464939, 2321378103, 436020662,
            2435761608, 2617840179, 2252832931, 2860366094, 1064834424, 3710036724, 3763663568,
            4193309457, 2011834090, 3265789271, 3394741216, 1218409082, 632882507, 72438928,
            2511736721, 3912306263, 2741280681, 3136395017, 2022168259, 3727789108, 1996033674,
            3946855279, 690751957, 1776496952, 2648544567, 2053315074, 334060226, 3869100932,
            1104498270, 3996547394, 3835824632, 2245437275, 287859317, 1860627118, 2476365147,
            2001424561, 3383680372, 4216371581, 3201433170, 3206348623, 483759815, 801425285,
            3569626608, 3246171543, 339726086, 959551011, 2477275092, 2253194661, 2252289456,
            3034616812, 2203735910, 2220236225, 3857610221, 3136787002, 2756531295, 3337195309,
            2503674130, 2113581562, 2157108637, 3455898557, 3521562538, 3526633842, 141199764,
            953174145, 794204693, 3113454587, 463714892, 1365526181, 3852290961, 3754807161,
            1779909624, 1032309934, 2635683189, 1569049906, 817119586, 1733832634, 644691459,
            3105673331, 299479627, 4113931634, 3533344381, 85288128, 4249502083, 2902198206,
            2079642913, 3691130921, 3931009447, 3025152428, 2582095659, 3587901421, 2229243967,
            4165889794, 1280065737, 2485881709, 2819658725, 166074890, 1082229622, 3879734420,
            3907302968, 2736728532, 476248491, 275260828, 1262227932, 361818124, 1274541469,
            1227449110, 1292668945, 2971534268, 4152611207, 1177747135, 811987535, 936936844,
            2396281505, 1766347708, 3508533613, 1251280615, 2771672483, 2084474117, 4220164459,
            1243577214, 2692411096, 2645994609, 2078356484, 765478408, 1693161474, 3224589988,
            984521179, 913627860, 3605183874, 1176274544, 3083419669, 3727961451, 1910742224,
            3764937154, 815328864, 2742374456, 4262607870, 3233198104, 51448497, 2156208524,
            2524802561, 2089638115, 2244850120, 3891805831, 3592998, 2651897909, 793345467,
            602867544, 1105210092, 2080272600, 2914664974, 69433834, 1561376240, 255826980,
            753580493, 61239267, 3344750381, 4043704973, 1907427573, 1183492198, 2313630628,
            834817599, 3656464674, 1715260449, 1171252584, 1649748683, 3787434732, 2825113302,
            3906838921, 2373615942, 64826516, 3130923741, 3451653452, 1686224226, 3257354346,
            2094889058, 3520155561, 1558457280, 333396768, 2427331597, 835683211, 4011471678,
            377792118, 3780241611, 2094344827, 4061525885, 3853014417, 2525480098, 2149650696,
            1913248100, 2973806189, 2228341681, 3237942459, 1742529028, 3344131004, 1161686701,
            3416810430, 1523769252, 1884853949, 2749657435, 1616606130, 4060681172, 3304032838,
            3337176555, 3169277751, 2873292754, 3657634999, 2590462156, 1405580787, 3348323528,
            1007696009, 3361911748, 3707159843, 3404322584, 733016704, 155511680, 2427252036,
            2720890616, 3641242812, 149514288, 555644419, 3509599537, 3773668371, 4029293596,
            1918886514, 193983022, 1159718298, 2662308763, 885522522, 4125467272, 3927180083,
            1501332445, 2781762196, 2119262595, 2196017759, 3824472390, 3330833498, 2692150616,
            524128214, 1567862389, 773773238, 1914559581, 1345977589, 3329624130, 2950885216,
            1786406318, 1009363575, 1049198456, 280333136, 1281149714, 113615595, 1556110439,
            352887486, 2758126079, 1043152840, 4239622199, 458631077, 2563995515, 3705333336,
            1585830564, 2194628966, 2210854208, 3837099713, 307958730, 3592368764, 1393676849,
            775830694, 3308359528, 1742987222, 2976536214, 3671240554, 2018573695, 2015195451,
            2745381458, 3981325985, 2055214805, 209317954, 3214717635, 2159194397, 4250114608,
            1689222200, 315462517, 525719460, 1344882389, 1697444804, 3643148146, 1794714429,
            4101481018, 3432959722, 2028456167, 993684393, 1964591953, 1304774004, 934485220,
            1631135926, 433074091, 1199305684, 4251436001, 2071810046, 3377101925, 2513252413,
            2802465123, 14775152, 2838953309, 3952488227, 1265215320, 1987662128, 980309503,
            2777413071, 2487316502, 3707670153, 2820123615, 2235107421, 3404802881, 3105984831,
            2689521929, 3767254189, 1611485083, 1551175798, 2097951317, 2149708297, 2898590335,
            3211378237, 677081442, 3913152298, 3313219366, 2654301541, 3525920319, 2042973586,
            3863736417, 2800670215, 1023323561, 1333396852, 1013707050, 3598002301, 561949127,
            1551957284, 956535322, 4293706497, 1962194398, 3879385132, 1330076351, 45462392,
            4032785188, 3760062126, 43428281, 3488592114, 941786787, 2263068395, 1791313394,
            3803697264, 2405823416, 325252562, 2951401873, 1258411673, 1695275031, 2690612321,
            1377389302,
        ];

        let sync_diff = mt.sync(&state_0, 0);
        assert!(sync_diff.is_some());
        assert_eq!(sync_diff.unwrap(), 0);
    }

    #[test]
    fn test_sync_ps2_state_1() {
        let mut mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        let state_1: [u32; N] = [
            3031888883, 1859250936, 2951395864, 2747330664, 3493451883, 2865004944, 3020830367,
            2170753199, 1982864475, 11114089, 901706522, 928557095, 756821561, 2358181779,
            4158731650, 1348413616, 2799680569, 3042749692, 3862367575, 4039627501, 4256696918,
            2051095095, 792372451, 3275738148, 2419361152, 1757440204, 4108169532, 2266456158,
            2469286497, 2408746000, 2763548022, 3792146575, 806954904, 2793427270, 1063265572,
            3508860285, 2949902591, 369548529, 3020796899, 3066613051, 1507091806, 2070317817,
            252345280, 1999211987, 1975105189, 2256844821, 3460109405, 344288949, 2432043707,
            1724762912, 1995143561, 2586551310, 3011134890, 4164460184, 2255695050, 4248570150,
            169291139, 387319980, 3829347111, 73602458, 3021669324, 2860495921, 2248151338,
            1998632598, 4096241141, 1226355108, 3171834244, 379741625, 4044068296, 2244880136,
            2654147536, 3260638416, 1957805285, 2130128730, 770132616, 2056834570, 3897283136,
            1449064497, 1358040869, 3913723445, 506809631, 1939257597, 3983636882, 1560097819,
            3284865973, 2085234305, 2415499902, 1643608327, 830665278, 3128209120, 860798572,
            4048623459, 2037629642, 3128361786, 4004026553, 2301876248, 2039817346, 3362714598,
            4195700952, 602537000, 496788408, 345416475, 4130721194, 37934018, 2593103727,
            2329330235, 2313100762, 2872638552, 385580129, 2097742251, 3850975697, 1669543741,
            1001041800, 4006378402, 1506477875, 858159578, 4006595140, 2918638914, 996848906,
            4210900117, 682485232, 4008940795, 1956319322, 74184624, 3222512652, 2858300516,
            2796244079, 3226637663, 2452032798, 1244041936, 2152112780, 3807467811, 1684946217,
            1625880021, 1072513098, 2884896254, 532499960, 4094112484, 1165388772, 2006141981,
            1442119479, 1173605296, 3219214997, 1790908121, 2941305107, 2112216223, 2647432453,
            1846214544, 2499743088, 222191815, 651225794, 3584693777, 954324604, 2324284453,
            1111118694, 2740177058, 2824401525, 489486984, 1330739150, 202856626, 3365331646,
            2268628925, 651892465, 2774947606, 349446981, 833072399, 3653360504, 1468683912,
            2935013038, 1090842585, 405088736, 2673384032, 778918612, 182385778, 2137985064,
            192927980, 3689930489, 258626799, 142273269, 3506920937, 1771477143, 82074852,
            2660759618, 3794025361, 2017338236, 4290470877, 2385159968, 3453037681, 2746441261,
            431279152, 2758284303, 4226389463, 4062764627, 3537369385, 711375962, 398470416,
            3008612524, 2155539510, 3567053838, 2833341423, 2825127120, 347446650, 2276327386,
            115485203, 1344673851, 3357263918, 715180069, 3442947089, 1634949392, 684870474,
            740372022, 745514783, 2154774115, 1862979487, 2349868724, 1858456131, 2645211170,
            2284015939, 1232413079, 3491892763, 2320511520, 2514250522, 1329438070, 2806130137,
            1877011791, 3609567429, 1650097966, 495243997, 1567662912, 2528510188, 353970788,
            3903582277, 1966718378, 4233460339, 2210194378, 1166119278, 3811381577, 1851062558,
            2872319167, 2943422279, 2671641349, 3127216114, 3546927829, 3882204331, 2015011953,
            2764475394, 1641414871, 1931415768, 3015261120, 736690631, 2608956306, 2916000748,
            330420584, 3708626915, 863373610, 2783014320, 256409549, 3228846367, 287025144,
            2952877698, 2933644820, 2615296523, 1031027863, 1945499067, 1526222378, 3164262663,
            1640297725, 2214532560, 777541246, 1354133884, 1505286313, 93573069, 1668571458,
            3049785128, 2900238529, 4124957515, 42103325, 4248783859, 2550337094, 548008637,
            363374956, 1321849793, 961311357, 4015814205, 940494518, 2672014434, 2831923442,
            2038806521, 2660117677, 300313454, 168901527, 4258463892, 2052478054, 3722772139,
            565795096, 2203750708, 1580057722, 1336906293, 4113174919, 3832817303, 2623158237,
            154149938, 2654478955, 3072535913, 2430089033, 2274391193, 1739357480, 878140391,
            2317376233, 2809044497, 3647819733, 3391031391, 2791576716, 3437625510, 998715633,
            1882184077, 1633095903, 3635491909, 2888490622, 2992494650, 1074492531, 2754944048,
            4157505765, 3772054163, 932719335, 2464559885, 1257498769, 1504257906, 2448832388,
            2023108735, 2273552096, 3613278793, 996954550, 572065997, 1574349627, 1676729757,
            1674242044, 1913463732, 222417316, 602967865, 3714083967, 3556060397, 3063980348,
            1059824574, 2540448763, 3408872171, 3094843125, 2399172078, 3096287012, 2422852117,
            3009568635, 742140928, 4034273458, 1934634789, 867673718, 1228961246, 906077521,
            2137535031, 1911303242, 2842608644, 605812944, 531464689, 2555642804, 1808733924,
            2777196046, 2454693870, 2141675219, 1886058457, 1329315766, 51517572, 1311483730,
            282999236, 1701502273, 2131084569, 2484809744, 365249672, 382870017, 3098703693,
            2702065615, 2305202709, 1993078665, 3383283048, 1145323263, 211095071, 2015577911,
            1600913570, 3687104085, 3043391676, 2447942841, 347003632, 2239757380, 3498827639,
            714981477, 4071654841, 881071536, 740077179, 3071691187, 1624565640, 2943134337,
            1981885924, 459560046, 6688215, 1797554400, 57666430, 254329897, 3662474538, 910770503,
            1802518643, 3994088312, 3733754321, 1948576596, 3063033214, 3998015601, 2933568086,
            4029551645, 3043917610, 1537568965, 2329956087, 4235615173, 2102735466, 1242332679,
            2428528403, 4132149385, 1384381449, 2738862085, 3496965596, 1762184239, 2224855105,
            4272114613, 2773093742, 2931822505, 1626983757, 2620010309, 3351685182, 2341106866,
            547213146, 2895509243, 1258236048, 1580169646, 2709297750, 291795886, 1039151551,
            12050339, 2487559602, 427619226, 2291814541, 3887011716, 3239207195, 1014771616,
            2824845460, 121663160, 2218555224, 2623947412, 575338410, 1686126191, 3705160873,
            1305892331, 3966636262, 2605023559, 1452280948, 130235898, 2791887381, 686358204,
            1107946184, 3870191980, 3675891046, 2524284589, 4249470502, 1075418584, 336775569,
            2999240514, 2350096117, 3925156964, 2436696817, 1356250812, 1958319963, 265836581,
            1827819996, 3367651424, 1181329448, 3652145699, 991985544, 4109882060, 1674315155,
            2214657287, 2560371750, 26343621, 1202036930, 3824635909, 1146867118, 1982991532,
            2021113063, 717597717, 1000404176, 3104687252, 3260737336, 2768273485, 1264579043,
            3820212179, 4212037810, 3291639691, 3482984172, 2783355367, 1293727222, 1250831382,
            2399954333, 2158996556, 2763843529, 1844631520, 1857881549, 2590065898, 3205671762,
            2147945438, 2693889370, 1605096048, 82070791, 2794386818, 9792200, 1995007156,
            625003394, 2058718831, 4112185877, 373004886, 809547606, 552435559, 4098728244,
            2778160183, 1997027426, 1075686871, 3040328533, 1201894574, 2277976346, 2768810797,
            341676739, 753037484, 3880324444, 1112428657, 2087405463, 3687747958, 1238089475,
            682539795, 1035716816, 4142477363, 3087464590, 2786654557, 3732758626, 573808991,
            1335992225, 355012485, 3310942471, 3427268906, 3689680806, 2833113616, 750555108,
            3167908830, 358855311, 3675399432, 2707489882, 3431451707, 200328685, 3086593991,
            2120962769, 3293285554, 510935043, 3483413849, 3736074597, 3917292375, 2635126215,
            1583800988, 1516439154, 1520398354, 2890957667, 1326504139, 867878093, 3307261413,
            1341808831, 1567272741, 1760979850, 3494644095, 904812786, 3128947582, 3673868543,
            2689491660, 406531434, 3638991810, 3908330897, 1711540708, 3802634001, 1266694464,
            2898982945, 158518647, 1939513443, 1649652782, 54917146, 3662135094, 2235851882,
            3295018639, 1771480552, 250331473, 3612932512, 3065127205, 3126546050, 155487621,
            2955735902, 3267898786, 2459132889, 2009958293, 2006003253, 4052187386, 877314472,
            3570854428, 1607769934, 2591421228, 1102961151, 3221543493, 2696105089, 1394352940,
            3436086957, 1584793440, 3591740406, 1497225581, 3181583199, 1158679296, 876970133,
        ];

        let sync_diff = mt.sync(&state_1, 450);
        assert!(sync_diff.is_some());
        assert_eq!(sync_diff.unwrap(), 450 + N);
    }

    #[test]
    fn test_sync_ps2_state_50() {
        let mut mt = super::MT19937::new_with_seed(super::DEFAULT_SEED_PS2);

        let state_50: [u32; N] = [
            2782082507, 3464147951, 947927528, 725798687, 2890217789, 2052236997, 2975407552,
            171113758, 4247473067, 3812442160, 3737364821, 3134585984, 4138098171, 1228415191,
            1070424049, 3406748377, 4133696690, 1259716704, 3887461901, 852147124, 353972089,
            734931623, 1352761578, 2982830122, 2157008102, 3893607257, 2683438659, 3232853754,
            1760999635, 2370059325, 1993896894, 966721161, 2199406119, 1227025955, 3045938011,
            3727978399, 1208629208, 2971074747, 1031850933, 2952328314, 3038465072, 1790820044,
            1777828156, 3773902640, 3507407128, 3366437501, 3986739753, 2062779021, 1554547944,
            247387036, 1253586273, 3000520187, 658818546, 3628868292, 4286811478, 2038584620,
            586586657, 3687532638, 2253688356, 938097085, 4250120416, 1153918168, 3437071434,
            2917245603, 2124662016, 2010906460, 3047399044, 2113082654, 3640707609, 1341520531,
            1772967041, 1793920097, 1301603496, 211173439, 1358217151, 3868248736, 1448631508,
            1424955320, 1673382351, 662856537, 889451648, 3930064703, 2311945013, 2625830751,
            1999180392, 89323915, 1841255099, 2743690876, 4263925206, 729111673, 2022241168,
            334522693, 2771076740, 326963199, 124091206, 1198544595, 3303865150, 124910397,
            649478079, 1983398603, 693771358, 297950241, 2389835534, 3663838399, 3682690659,
            1446576781, 1717251553, 2995534496, 3424357882, 3309831934, 3740387020, 812069571,
            3791376162, 1119227238, 392777508, 2591000511, 3170313683, 3662563598, 151340690,
            2876043546, 3911496475, 3187978342, 1260698318, 3611940138, 1618119201, 29953771,
            1599025895, 2663887484, 4208074849, 4114623205, 921590663, 115213657, 2231336626,
            2475001175, 690735113, 1674613643, 3985743963, 1797084014, 2455561799, 1453880329,
            2731940135, 654803099, 3794361478, 4234553444, 1624873090, 1455488067, 3754303853,
            502351797, 3194727552, 413243848, 3488790411, 1541266479, 79660, 1457829977,
            3397116270, 1795318572, 2320815386, 3751439189, 786149147, 3052284213, 3257517122,
            3332920255, 4130321806, 2376733649, 3442871728, 2080625501, 3470237406, 1040397376,
            3144353432, 1150345843, 3318852377, 1656680082, 3132790100, 240632910, 3749348675,
            4217605056, 3469846955, 2393590163, 134475465, 2042577585, 276632527, 3695071342,
            1697190905, 2206926600, 1169421443, 2458168038, 3141625177, 704757084, 3534037418,
            673510334, 3329432422, 1473873339, 934646853, 1508057801, 2303891923, 1503794789,
            1644919816, 1000893720, 2478795998, 3342714252, 3029792383, 1824078287, 2655040602,
            4152354817, 870149650, 794757703, 823175123, 3108587936, 845007523, 89057476,
            4059386386, 1737092698, 1886467691, 1431792898, 1551904085, 400149051, 469831559,
            3323615177, 3712958876, 17850665, 3092326759, 3822381003, 1240821353, 1657124926,
            1974952026, 3497465483, 1556027559, 350347739, 4222729839, 4015263554, 3548723808,
            1097937427, 2890073023, 2442192002, 1274870188, 3268578447, 783752741, 1653903332,
            2088042523, 4131028552, 3373021634, 1266367068, 2810191618, 3100681056, 2823798369,
            3260275222, 709151525, 429077713, 986581039, 3045308080, 3737032146, 4068486039,
            1294007103, 2550825964, 1843674576, 3279044369, 800929628, 1705391977, 850493932,
            3405687370, 352196340, 3094579985, 470123758, 4059231774, 814905607, 560667767,
            3189570592, 3087916189, 4082223016, 34900086, 3466323388, 2684971198, 3073716489,
            1323548704, 1101362399, 1554376258, 3646013985, 17305838, 2677202501, 1602808005,
            2224022498, 2036124909, 1471984942, 936258288, 2630533329, 4146417928, 2659778240,
            647579120, 564497604, 1860466743, 3269081374, 749378810, 643342082, 112403079,
            255596200, 1478116857, 3367784510, 2660542430, 1907533754, 241917763, 3124047002,
            2783996665, 2441149938, 1747651460, 2151910682, 1924109107, 3757473785, 2751629748,
            1800699571, 1891174032, 2091518393, 3847025452, 4239882628, 1735381770, 653325215,
            3954231431, 1226607788, 1098835167, 2256826300, 4185597637, 4284714458, 3083693338,
            768247161, 3838081988, 4091020627, 406667238, 1904580957, 1336064663, 2356199932,
            1689172891, 880048195, 1770302910, 2576966890, 2192316753, 143212647, 3021808895,
            2512496151, 1101130018, 101009712, 1114070666, 805890381, 2042448634, 2477562183,
            868062295, 648475498, 972762014, 1072177259, 2682734878, 2679450231, 1629832563,
            1257946164, 310919961, 3191369971, 3135891771, 1052967688, 3790898928, 2815749104,
            1863665856, 3546993799, 4008111837, 3682370387, 2345226421, 3430864932, 4139581246,
            2297846179, 2515177467, 738874755, 2868684853, 2266035324, 1984904723, 2779634869,
            510257706, 4245087404, 981221328, 2815956355, 1309139984, 437618065, 1333105845,
            3844026358, 1991856113, 3611321826, 2584622055, 2671123697, 1217616530, 2181158704,
            2355763382, 1629010841, 161135807, 1042576399, 2284858338, 858235289, 404230768,
            1313269540, 2263095034, 151834546, 692436294, 3419645048, 2191295413, 3906762914,
            2173775632, 1640685246, 766259957, 3377569344, 4162215188, 2944920364, 657265253,
            3368854601, 3876835895, 3272523345, 2017989375, 2073827925, 2672154536, 2847625782,
            718407240, 3872953133, 820601633, 1490238103, 3788909643, 127729901, 838287999,
            3775746792, 776901380, 2183047729, 174713417, 4026874704, 1142146436, 4244687887,
            2520775958, 2759972870, 451313138, 2323054538, 1952089507, 700733151, 844499862,
            1643525306, 3939958377, 2862257419, 2118262618, 2804627375, 1040501141, 1798751490,
            3227131371, 1074769561, 1210994520, 455150061, 3985213970, 2324382517, 1606882259,
            4052990179, 1064559966, 1030502416, 1168558698, 3264670901, 860881366, 1954904743,
            2620630404, 3638469793, 3498558223, 616777488, 4277193277, 112267670, 271176462,
            996061707, 3073465162, 2301288282, 1088736034, 120001138, 3140415696, 747226070,
            1288312832, 829548165, 3412283681, 2875948855, 3263538723, 2802123288, 2758547928,
            3459336613, 4232420672, 3514766890, 667371610, 1732284685, 371926679, 1989527913,
            2283993584, 2250873462, 2867307396, 2795023897, 2426497825, 1671988868, 812266178,
            1762949666, 3819310967, 1067379717, 2082947089, 1931967100, 4046406806, 4202610979,
            3300424733, 2068178907, 1362828266, 1440257807, 4160982654, 584095347, 1202673771,
            1754057396, 639680507, 1149800615, 2408459642, 2832987590, 3504353482, 1636677104,
            1951335236, 2111295598, 1050486334, 677759708, 161424463, 3877153942, 483891295,
            2846392044, 1846922613, 838563360, 1871603138, 232963599, 373117939, 826114848,
            58744722, 2769224758, 579867404, 635535411, 210424781, 1503613014, 274327519,
            941019182, 1862905338, 1644681974, 3734506865, 4161008569, 1455412105, 4180619467,
            382067119, 3750486984, 4242471319, 2799010606, 1918901824, 2370798129, 1384864049,
            4031828511, 3132722660, 2137747256, 1396422176, 2145039831, 3179094738, 425613573,
            2453819445, 384384492, 2709773738, 3921449391, 4142186051, 841516007, 1452154239,
            257758269, 1379840062, 4148959021, 3687586629, 3038966753, 2119032902, 3244539837,
            1166744509, 62925495, 1885556385, 3558267943, 2614060922, 390106552, 3474991148,
            1138959042, 2408637296, 2891654644, 785982986, 2655285645, 2728433867, 1190551859,
            1021589802, 385525630, 3851355810, 2554531519, 2363991128, 3094509020, 667899630,
            1590482899, 3305355524, 4096727457, 1353144689, 1678363507, 3859506920, 893420998,
            3393101021, 1333190232, 331826967, 1482605599, 2729926220, 2992713185, 1488571146,
            1173584838, 3629457, 2338231683, 765664371, 1669461922, 3037698973, 246399349,
            4041708605, 4103522894, 484647155, 3904709119, 765682110, 810946963, 2565692839,
            3996561804, 254649795, 3546702938, 4138808041, 3020392025, 1200520806, 2795835173,
            1077055042,
        ];

        let sync_diff = mt.sync(&state_50, 0);
        assert!(sync_diff.is_some());
        assert_eq!(sync_diff.unwrap(), 50 * N);
    }

    #[test]
    fn test_non_existent_sync() {
        let mut mt = super::MT19937::new();

        let state_zeroes = [0u32; N];
        let sync = mt.sync(&state_zeroes, 0);
        assert!(sync.is_none());

        let state_50 = [50u32; N];
        let sync = mt.sync(&state_50, 0);
        assert!(sync.is_none());
    }

    #[test]
    fn test_sync_with_index_greater_n() {
        let mut mt = super::MT19937::new();
        let state_zeroes = [0u32; N];
        let sync = mt.sync(&state_zeroes, N);
        assert!(sync.is_none());
        let sync = mt.sync(&state_zeroes, N + 1);
        assert!(sync.is_none());
    }
}
